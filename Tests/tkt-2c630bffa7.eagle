###############################################################################
#
# tkt-2c630bffa7.eagle --
#
# Written by Joe Mistachkin.
# Released to the public domain, use at your own risk!
#
###############################################################################

package require EagleLibrary
package require EagleTest

runTestPrologue

###############################################################################

source [file join $path common.eagle]

###############################################################################

runTest {test tkt-2c630bffa7-1.1 {floating point type ranges} -setup {
  set fileName [file join [getTemporaryPath] tkt-2c630bffa7-1.1.sqlite3]
  set connection [sql open -type SQLite [subst {Data Source=${fileName}}]]
} -body {
  sql execute $connection "CREATE TABLE t1(x INTEGER, y REAL);"
  sql execute $connection "CREATE TABLE t2(x INTEGER, y FLOAT);"
  sql execute $connection "CREATE TABLE t3(x INTEGER, y DOUBLE);"

  set y [list -1.79769e308 -3.40282e038 -1 0 1 3.40282e038 1.79769e308]

  set result [list]

  foreach t [list t1 t2 t3] {
    for {set x 0} {$x < [llength $y]} {incr x} {
      sql execute $connection \
          "INSERT INTO $t (x, y) VALUES($x, [lindex $y $x]);"
    }

    sql execute -execute reader $connection \
      "SELECT x, y FROM $t ORDER BY x;"

    for {set x 1} {$x <= [llength $y]} {incr x} {
      lappend result [getRowColumnValue rows $x y]
    }
  }

  set result
} -cleanup {
  catch {sql close $connection}
  catch {file delete $fileName}
  unset -nocomplain x y t result rows connection fileName
} -constraints {eagle monoBug28 command.sql compile.DATA} -result \
{-1.79769E+308 -3.40282E+38 -1 0 1 3.40282E+38 1.79769E+308 -1.79769E+308\
-3.40282E+38 -1 0 1 3.40282E+38 1.79769E+308 -1.79769E+308 -3.40282E+38 -1 0 1\
3.40282E+38 1.79769E+308}}

###############################################################################

runTestEpilogue
